<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  <!-- 4줄 mybatis에서 복사해 옴 / 파일 만들 땐 그냥 xml파일로 -->
<mapper namespace="CommunityDao">
  		
  		<resultMap type="CommunityVO" id="CommunityVOMap">
  			<id column="ID" property="id"/>
  			<result column="TITLE" property="title"/>
  			<result column="BODY" property="body"/>
  			<result column="USER_ID" property="userId"/>
  			<result column="WRITE_DATE" property="writeDate"/>
  			<result column="VIEW_COUNT" property="viewCount"/>
  			<result column="RECOMMEND_COUNT" property="recommendCount"/>
  			<result column="REQUEST_IP" property="requestIp"/>
  			<result column="DISPLAY_FILE_NAME" property="displayFilename"/>
  			
  			
  			<association property="memberVO" javaType="MemberVO">
  				<id column="M_ID" property="id"/>
  				<result column="EAMIL" property="email"/>
  				<result column="NICKNAME" property="nickname"/>
  				<result column="REGIST_DATE" property="registDate"/>
  			</association>
  		</resultMap>
  		
  		<select id="selectAll" resultMap="CommunityVOMap">  <!-- mapper에 경로설정 해주어서 나중에 변경하기 편리함 -->
SELECT	            C.ID
  					, C.TITLE
  					, C.BODY
  					, C.USER_ID 
  					, TO_CHAR(C.WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') WRITE_DATE 
  					, C.VIEW_COUNT 
  					, C.RECOMMEND_COUNT 
  					, C.REQUEST_IP
  					, C.DISPLAY_FILE_NAME 
                    , M.ID M_ID
                    , M.EAMIL
                    , M.NICKNAME
                    , M.REGIST_DATE
  			FROM	COMMUNITY C
  					, MEMBER M
  			WHERE	C.USER_ID = M.ID(+)
  					
  			ORDER	BY C.ID DESC
  		</select>
  		
  		<insert id="insertCommunity" parameterType="CommunityVO">
  			INSERT INTO COMMUNITY (
  				ID
  				, TITLE
  				, BODY
  				, USER_ID
  				, WRITE_DATE
  				, VIEW_COUNT
  				, RECOMMEND_COUNT
  				, REQUEST_IP
  				, DISPLAY_FILE_NAME
  			)
  			VALUES (
  				COMMUNITY_ID_SEQ.NEXTVAL
  				, #{title}
  				, #{body}
  				, #{userId}
  				, SYSDATE
  				, 0
  				, 0
  				, #{requestIp}
  				, #{displayFilename}
  			)
  		</insert>
  		
  		<update id="incrementViewCount" parameterType="_int">
  			UPDATE	COMMUNITY
  			SET		VIEW_COUNT = VIEW_COUNT + 1
  			WHERE	ID = #{id}
  		</update>
  		
  		
  		<update id="incrementRCount" parameterType="_int">
  			UPDATE	COMMUNITY
  			SET		RECOMMEND_COUNT = RECOMMEND_COUNT + 1
  			WHERE	ID = #{id}
  		</update>
  		
  		<delete id="deletePage" parameterType="_int">
  			DELETE
  			FROM	COMMUNITY
  			WHERE	ID = #{id}
  			
  			
  		</delete>
  		
  		
  		<select id="selectOne" parameterType="_int" resultMap="CommunityVOMap">
  			SELECT  C.ID
  					, C.TITLE
  					, C.BODY
  					, C.USER_ID 
  					, TO_CHAR(C.WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') WRITE_DATE
  					, C.VIEW_COUNT 
  					, C.RECOMMEND_COUNT 
  					, C.REQUEST_IP
  					, C.DISPLAY_FILE_NAME 
                    , M.ID M_ID
                    , M.EAMIL
                    , M.NICKNAME
                    , M.REGIST_DATE
  			FROM	COMMUNITY C
  					, MEMBER M
  			WHERE	C.USER_ID = M.ID(+)
  			AND		C.ID = #{id}          <!-- 조인 된 글에서 내가 보고 싶은 글만 가져오기 -->
  		</select>
  		
  		
  		<delete id="deleteMyCommunities" parameterType = "_int">
  			DELETE
  			FROM	COMMUNITY
  			WHERE	USER_ID = #{userId}
  		</delete>
  		
  		<update id="updateCommunity" parameterType="CommunityVO">
  			UPDATE	COMMUNITY
  			SET		WRITE_DATE = SYSDATE
  					<if test="requestIp != null and requestIp != ''">
  					, REQUEST_IP = #{requestIp}
  					</if>
  					
  					<if test="title != null and title != ''">
  					, TITLE = #{title}
  					</if>  					
  					<if test="body != null and body != ''">
  					, BODY = #{body}
  					</if>
  					, DISPLAY_FILE_NAME = #{displayFilename}
  			WHERE	ID = #{id}
  			AND		USER_ID = #{userId}
  					
  		</update>
  		
  		<select id="selectMyCommunitiesCount" resultType="_int"
  				parameterType="_int">
  			SELECT 	COUNT(ID)
  			FROM	COMMUNITY
  			WHERE	USER_ID = #{userId}		
  		</select>
  		
  		<select id="selectMyCommunities" resultMap="CommunityVOMap"
  				parameterType="_int">
  			SELECT  C.ID
  					, C.TITLE
  					, C.BODY
  					, C.USER_ID 
  					, TO_CHAR(C.WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') WRITE_DATE
  					, C.VIEW_COUNT 
  					, C.RECOMMEND_COUNT 
  					, C.REQUEST_IP
  					, C.DISPLAY_FILE_NAME 
                    , M.ID M_ID
                    , M.EAMIL
                    , M.NICKNAME
                    , M.REGIST_DATE
  			FROM	COMMUNITY C
  					, MEMBER M
  			WHERE	C.USER_ID = M.ID
  			AND		C.USER_ID = #{userId}  
  		</select>
  		
  		<delete id="deleteCommunities" parameterType="map">
  			DELETE
  			FROM	COMMUNITY
  			WHERE	USER_ID=#{userId}
  			AND		ID IN
  			<foreach collection="ids" item="id" open="(" close= ")" separator=",">
  				#{id}
  			
  			</foreach>
  			
  		</delete>
  </mapper>
